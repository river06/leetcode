class Solution {
public:
    int lengthOfLongestSubstring(string s) {
      // Need two pointers begin and current i
      // A moving window to check the repeated char. and store the longest dist.
      // Creat a table to store the position of the char. last appeared
      // A table position is given by the ASII of different char.
      vector<int> position(265, -1);
      int dist = 0;
      int begin = 0;
      for(int i = 0; i< s.size(); ++i){
        begin = max(begin, pos[s[i]] + 1);
	pos(s[i]) = i;
	dist = max(ret, i-begin+1);
      }
      return dist;
    }
};
